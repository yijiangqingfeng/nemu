
obj/testcase/string:     file format elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc f0 ff ff 07       	mov    $0x7fffff0,%esp
  10000a:	e8 06 00 00 00       	call   100015 <main>
  10000f:	b8 00 00 00 00       	mov    $0x0,%eax
  100014:	d6                   	(bad)  

00100015 <main>:
  100015:	55                   	push   %ebp
  100016:	89 e5                	mov    %esp,%ebp
  100018:	83 e4 f0             	and    $0xfffffff0,%esp
  10001b:	83 ec 10             	sub    $0x10,%esp
  10001e:	8b 15 88 01 10 00    	mov    0x100188,%edx
  100024:	a1 80 01 10 00       	mov    0x100180,%eax
  100029:	89 54 24 04          	mov    %edx,0x4(%esp)
  10002d:	89 04 24             	mov    %eax,(%esp)
  100030:	e8 81 00 00 00       	call   1000b6 <__GI_strcmp>
  100035:	85 c0                	test   %eax,%eax
  100037:	74 06                	je     10003f <main+0x2a>
  100039:	b8 01 00 00 00       	mov    $0x1,%eax
  10003e:	d6                   	(bad)  
  10003f:	8b 15 84 01 10 00    	mov    0x100184,%edx
  100045:	a1 80 01 10 00       	mov    0x100180,%eax
  10004a:	89 54 24 04          	mov    %edx,0x4(%esp)
  10004e:	89 04 24             	mov    %eax,(%esp)
  100051:	e8 60 00 00 00       	call   1000b6 <__GI_strcmp>
  100056:	83 f8 ff             	cmp    $0xffffffff,%eax
  100059:	74 06                	je     100061 <main+0x4c>
  10005b:	b8 01 00 00 00       	mov    $0x1,%eax
  100060:	d6                   	(bad)  
  100061:	a1 84 01 10 00       	mov    0x100184,%eax
  100066:	8d 50 01             	lea    0x1(%eax),%edx
  100069:	a1 80 01 10 00       	mov    0x100180,%eax
  10006e:	83 c0 01             	add    $0x1,%eax
  100071:	89 54 24 04          	mov    %edx,0x4(%esp)
  100075:	89 04 24             	mov    %eax,(%esp)
  100078:	e8 39 00 00 00       	call   1000b6 <__GI_strcmp>
  10007d:	83 f8 ff             	cmp    $0xffffffff,%eax
  100080:	74 06                	je     100088 <main+0x73>
  100082:	b8 01 00 00 00       	mov    $0x1,%eax
  100087:	d6                   	(bad)  
  100088:	a1 84 01 10 00       	mov    0x100184,%eax
  10008d:	8d 50 02             	lea    0x2(%eax),%edx
  100090:	a1 80 01 10 00       	mov    0x100180,%eax
  100095:	83 c0 02             	add    $0x2,%eax
  100098:	89 54 24 04          	mov    %edx,0x4(%esp)
  10009c:	89 04 24             	mov    %eax,(%esp)
  10009f:	e8 12 00 00 00       	call   1000b6 <__GI_strcmp>
  1000a4:	83 f8 ff             	cmp    $0xffffffff,%eax
  1000a7:	74 06                	je     1000af <main+0x9a>
  1000a9:	b8 01 00 00 00       	mov    $0x1,%eax
  1000ae:	d6                   	(bad)  
  1000af:	b8 00 00 00 00       	mov    $0x0,%eax
  1000b4:	c9                   	leave  
  1000b5:	c3                   	ret    

001000b6 <__GI_strcmp>:
  1000b6:	57                   	push   %edi
  1000b7:	56                   	push   %esi
  1000b8:	8b 74 24 0c          	mov    0xc(%esp),%esi
  1000bc:	8b 7c 24 10          	mov    0x10(%esp),%edi
  1000c0:	ac                   	lods   %ds:(%esi),%al
  1000c1:	ae                   	scas   %es:(%edi),%al
  1000c2:	75 08                	jne    1000cc <__GI_strcmp+0x16>
  1000c4:	84 c0                	test   %al,%al
  1000c6:	75 f8                	jne    1000c0 <__GI_strcmp+0xa>
  1000c8:	31 c0                	xor    %eax,%eax
  1000ca:	eb 04                	jmp    1000d0 <__GI_strcmp+0x1a>
  1000cc:	19 c0                	sbb    %eax,%eax
  1000ce:	0c 01                	or     $0x1,%al
  1000d0:	5e                   	pop    %esi
  1000d1:	5f                   	pop    %edi
  1000d2:	c3                   	ret    
