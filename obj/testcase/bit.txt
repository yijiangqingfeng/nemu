
obj/testcase/bit:     file format elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc f0 ff ff 07       	mov    $0x7fffff0,%esp
  10000a:	e8 aa 00 00 00       	call   1000b9 <main>
  10000f:	b8 00 00 00 00       	mov    $0x0,%eax
  100014:	d6                   	(bad)  

00100015 <getbit>:
  100015:	55                   	push   %ebp
  100016:	89 e5                	mov    %esp,%ebp
  100018:	53                   	push   %ebx
  100019:	83 ec 10             	sub    $0x10,%esp
  10001c:	8b 45 0c             	mov    0xc(%ebp),%eax
  10001f:	c1 f8 03             	sar    $0x3,%eax
  100022:	89 45 f4             	mov    %eax,-0xc(%ebp)
  100025:	83 65 0c 07          	andl   $0x7,0xc(%ebp)
  100029:	8b 45 0c             	mov    0xc(%ebp),%eax
  10002c:	ba 01 00 00 00       	mov    $0x1,%edx
  100031:	89 d3                	mov    %edx,%ebx
  100033:	89 c1                	mov    %eax,%ecx
  100035:	d3 e3                	shl    %cl,%ebx
  100037:	89 d8                	mov    %ebx,%eax
  100039:	88 45 fb             	mov    %al,-0x5(%ebp)
  10003c:	8b 55 08             	mov    0x8(%ebp),%edx
  10003f:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100042:	8d 04 02             	lea    (%edx,%eax,1),%eax
  100045:	0f b6 00             	movzbl (%eax),%eax
  100048:	22 45 fb             	and    -0x5(%ebp),%al
  10004b:	84 c0                	test   %al,%al
  10004d:	0f 95 c0             	setne  %al
  100050:	83 c4 10             	add    $0x10,%esp
  100053:	5b                   	pop    %ebx
  100054:	5d                   	pop    %ebp
  100055:	c3                   	ret    

00100056 <setbit>:
  100056:	55                   	push   %ebp
  100057:	89 e5                	mov    %esp,%ebp
  100059:	53                   	push   %ebx
  10005a:	83 ec 14             	sub    $0x14,%esp
  10005d:	8b 45 10             	mov    0x10(%ebp),%eax
  100060:	88 45 e8             	mov    %al,-0x18(%ebp)
  100063:	8b 45 0c             	mov    0xc(%ebp),%eax
  100066:	c1 f8 03             	sar    $0x3,%eax
  100069:	89 45 f4             	mov    %eax,-0xc(%ebp)
  10006c:	83 65 0c 07          	andl   $0x7,0xc(%ebp)
  100070:	8b 45 0c             	mov    0xc(%ebp),%eax
  100073:	ba 01 00 00 00       	mov    $0x1,%edx
  100078:	89 d3                	mov    %edx,%ebx
  10007a:	89 c1                	mov    %eax,%ecx
  10007c:	d3 e3                	shl    %cl,%ebx
  10007e:	89 d8                	mov    %ebx,%eax
  100080:	88 45 fb             	mov    %al,-0x5(%ebp)
  100083:	8b 55 08             	mov    0x8(%ebp),%edx
  100086:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100089:	8d 04 02             	lea    (%edx,%eax,1),%eax
  10008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10008f:	8b 55 f0             	mov    -0x10(%ebp),%edx
  100092:	80 7d e8 00          	cmpb   $0x0,-0x18(%ebp)
  100096:	75 10                	jne    1000a8 <setbit+0x52>
  100098:	8b 45 f0             	mov    -0x10(%ebp),%eax
  10009b:	0f b6 00             	movzbl (%eax),%eax
  10009e:	0f b6 4d fb          	movzbl -0x5(%ebp),%ecx
  1000a2:	f7 d1                	not    %ecx
  1000a4:	21 c8                	and    %ecx,%eax
  1000a6:	eb 09                	jmp    1000b1 <setbit+0x5b>
  1000a8:	8b 45 f0             	mov    -0x10(%ebp),%eax
  1000ab:	0f b6 00             	movzbl (%eax),%eax
  1000ae:	0a 45 fb             	or     -0x5(%ebp),%al
  1000b1:	88 02                	mov    %al,(%edx)
  1000b3:	83 c4 14             	add    $0x14,%esp
  1000b6:	5b                   	pop    %ebx
  1000b7:	5d                   	pop    %ebp
  1000b8:	c3                   	ret    

001000b9 <main>:
  1000b9:	55                   	push   %ebp
  1000ba:	89 e5                	mov    %esp,%ebp
  1000bc:	83 ec 1c             	sub    $0x1c,%esp
  1000bf:	c6 45 fe aa          	movb   $0xaa,-0x2(%ebp)
  1000c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
  1000ca:	00 
  1000cb:	8d 45 fe             	lea    -0x2(%ebp),%eax
  1000ce:	89 04 24             	mov    %eax,(%esp)
  1000d1:	e8 3f ff ff ff       	call   100015 <getbit>
  1000d6:	84 c0                	test   %al,%al
  1000d8:	74 06                	je     1000e0 <main+0x27>
  1000da:	b8 01 00 00 00       	mov    $0x1,%eax
  1000df:	d6                   	(bad)  
  1000e0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
  1000e7:	00 
  1000e8:	8d 45 fe             	lea    -0x2(%ebp),%eax
  1000eb:	89 04 24             	mov    %eax,(%esp)
  1000ee:	e8 22 ff ff ff       	call   100015 <getbit>
  1000f3:	3c 01                	cmp    $0x1,%al
  1000f5:	74 06                	je     1000fd <main+0x44>
  1000f7:	b8 01 00 00 00       	mov    $0x1,%eax
  1000fc:	d6                   	(bad)  
  1000fd:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
  100104:	00 
  100105:	8d 45 fe             	lea    -0x2(%ebp),%eax
  100108:	89 04 24             	mov    %eax,(%esp)
  10010b:	e8 05 ff ff ff       	call   100015 <getbit>
  100110:	84 c0                	test   %al,%al
  100112:	74 06                	je     10011a <main+0x61>
  100114:	b8 01 00 00 00       	mov    $0x1,%eax
  100119:	d6                   	(bad)  
  10011a:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
  100121:	00 
  100122:	8d 45 fe             	lea    -0x2(%ebp),%eax
  100125:	89 04 24             	mov    %eax,(%esp)
  100128:	e8 e8 fe ff ff       	call   100015 <getbit>
  10012d:	3c 01                	cmp    $0x1,%al
  10012f:	74 06                	je     100137 <main+0x7e>
  100131:	b8 01 00 00 00       	mov    $0x1,%eax
  100136:	d6                   	(bad)  
  100137:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
  10013e:	00 
  10013f:	8d 45 fe             	lea    -0x2(%ebp),%eax
  100142:	89 04 24             	mov    %eax,(%esp)
  100145:	e8 cb fe ff ff       	call   100015 <getbit>
  10014a:	84 c0                	test   %al,%al
  10014c:	74 06                	je     100154 <main+0x9b>
  10014e:	b8 01 00 00 00       	mov    $0x1,%eax
  100153:	d6                   	(bad)  
  100154:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)
  10015b:	00 
  10015c:	8d 45 fe             	lea    -0x2(%ebp),%eax
  10015f:	89 04 24             	mov    %eax,(%esp)
  100162:	e8 ae fe ff ff       	call   100015 <getbit>
  100167:	3c 01                	cmp    $0x1,%al
  100169:	74 06                	je     100171 <main+0xb8>
  10016b:	b8 01 00 00 00       	mov    $0x1,%eax
  100170:	d6                   	(bad)  
  100171:	c7 44 24 04 06 00 00 	movl   $0x6,0x4(%esp)
  100178:	00 
  100179:	8d 45 fe             	lea    -0x2(%ebp),%eax
  10017c:	89 04 24             	mov    %eax,(%esp)
  10017f:	e8 91 fe ff ff       	call   100015 <getbit>
  100184:	84 c0                	test   %al,%al
  100186:	74 06                	je     10018e <main+0xd5>
  100188:	b8 01 00 00 00       	mov    $0x1,%eax
  10018d:	d6                   	(bad)  
  10018e:	c7 44 24 04 07 00 00 	movl   $0x7,0x4(%esp)
  100195:	00 
  100196:	8d 45 fe             	lea    -0x2(%ebp),%eax
  100199:	89 04 24             	mov    %eax,(%esp)
  10019c:	e8 74 fe ff ff       	call   100015 <getbit>
  1001a1:	3c 01                	cmp    $0x1,%al
  1001a3:	74 06                	je     1001ab <main+0xf2>
  1001a5:	b8 01 00 00 00       	mov    $0x1,%eax
  1001aa:	d6                   	(bad)  
  1001ab:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
  1001b2:	00 
  1001b3:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
  1001ba:	00 
  1001bb:	8d 45 fe             	lea    -0x2(%ebp),%eax
  1001be:	89 04 24             	mov    %eax,(%esp)
  1001c1:	e8 90 fe ff ff       	call   100056 <setbit>
  1001c6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
  1001cd:	00 
  1001ce:	c7 44 24 04 09 00 00 	movl   $0x9,0x4(%esp)
  1001d5:	00 
  1001d6:	8d 45 fe             	lea    -0x2(%ebp),%eax
  1001d9:	89 04 24             	mov    %eax,(%esp)
  1001dc:	e8 75 fe ff ff       	call   100056 <setbit>
  1001e1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
  1001e8:	00 
  1001e9:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
  1001f0:	00 
  1001f1:	8d 45 fe             	lea    -0x2(%ebp),%eax
  1001f4:	89 04 24             	mov    %eax,(%esp)
  1001f7:	e8 5a fe ff ff       	call   100056 <setbit>
  1001fc:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
  100203:	00 
  100204:	c7 44 24 04 0b 00 00 	movl   $0xb,0x4(%esp)
  10020b:	00 
  10020c:	8d 45 fe             	lea    -0x2(%ebp),%eax
  10020f:	89 04 24             	mov    %eax,(%esp)
  100212:	e8 3f fe ff ff       	call   100056 <setbit>
  100217:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
  10021e:	00 
  10021f:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)
  100226:	00 
  100227:	8d 45 fe             	lea    -0x2(%ebp),%eax
  10022a:	89 04 24             	mov    %eax,(%esp)
  10022d:	e8 24 fe ff ff       	call   100056 <setbit>
  100232:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
  100239:	00 
  10023a:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)
  100241:	00 
  100242:	8d 45 fe             	lea    -0x2(%ebp),%eax
  100245:	89 04 24             	mov    %eax,(%esp)
  100248:	e8 09 fe ff ff       	call   100056 <setbit>
  10024d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
  100254:	00 
  100255:	c7 44 24 04 0e 00 00 	movl   $0xe,0x4(%esp)
  10025c:	00 
  10025d:	8d 45 fe             	lea    -0x2(%ebp),%eax
  100260:	89 04 24             	mov    %eax,(%esp)
  100263:	e8 ee fd ff ff       	call   100056 <setbit>
  100268:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
  10026f:	00 
  100270:	c7 44 24 04 0f 00 00 	movl   $0xf,0x4(%esp)
  100277:	00 
  100278:	8d 45 fe             	lea    -0x2(%ebp),%eax
  10027b:	89 04 24             	mov    %eax,(%esp)
  10027e:	e8 d3 fd ff ff       	call   100056 <setbit>
  100283:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
  100287:	3c 55                	cmp    $0x55,%al
  100289:	74 06                	je     100291 <main+0x1d8>
  10028b:	b8 01 00 00 00       	mov    $0x1,%eax
  100290:	d6                   	(bad)  
  100291:	b8 00 00 00 00       	mov    $0x0,%eax
  100296:	c9                   	leave  
  100297:	c3                   	ret    
